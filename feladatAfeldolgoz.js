//GOMBOK KIVÁLASZTÁSA
const gombok = document.querySelectorAll('button');
console.log(gombok);

//PARAGRAFUS SZÖVEGÉNEK KIVÁLASZTÁSA
const ideSzovegMegy = document.querySelector('#selectable')

gombok[0].addEventListener('click', () =>{
    ideSzovegMegy.innerHTML = "<p>Az egyik leglassabb rendezési algoritmus, mivel ez végzi a legtöbb összehasonlítást a többi algoritmushoz képest. Ez a módszer akkor hatékony ha az rendezni való elemek majdnem a megfelelő sorrendben vannak.</p><br> <p><b><i>Statisztikák (10,000 elem esetén, 'n' az elemek száma):</i></b></p> <p>Összehasonlítások száma: n*(n-1)/2 = 49.995.000</p> <p>Min. mozgatás (eleve rendezett): 0<p> <p>Max. mozgatás (eleve fordított sorrend): 3*(n*(n-1)/2) =  n<sup>2</sup> = 149.985.000</p> <p>Helyfoglalás: n+1 = 10.001</p> <p>Min. lépésszám: n*(n-1)/2 + 0 = 49.995.000</p> <p>Max. lépésszám: n*(n-1)/2 (összehasonlítások) + 3*(n*(n-1)/2) =  n<sup>2</sup> (Max. mozgatás) = 199.980.000</p>"
})
gombok[1].addEventListener('click', () =>{
    ideSzovegMegy.innerHTML = "<p>A 2. elemtől kezdve minden elemet összehasonlítunk az előzővel (előzőekkel), addig amíg van mivel összehasonlítani és amíg az előző elem nagyobb az összehasonlítandó elemnél. Ha az előző elem nem nagyobb akkor felcserélődnek.</p><br> <p><b><i>Statisztikák (10,000 elem esetén, 'n' az elemek száma):</i></b></p> <p>Min. összehasonlítás (eleve rendezett): n-1 = 9.999</p> <p>Max. összehasonlítás (eleve fordított sorrend): n*(n-1)/2 + 0 = 49.995.000</p> <p>Min. mozgatás (eleve rendezett): 0<p> <p>Max. mozgatás (eleve fordított sorrend): 3*(n*(n-1)/2) =  n<sup>2</sup> = 149.985.000</p> <p>Helyfoglalás: n+1 = 10.001</p> <p>Min. lépésszám (eleve rendezett): n-1 + 0 = 9.999</p> <p>Max. lépésszám (eleve fordított sorrend): n*(n-1)/2 + 3*(n*(n-1)/2) =  n<sup>2</sup> (Max. mozgatás) = 199.980.000</p>"
})
gombok[2].addEventListener('click', () =>{
    ideSzovegMegy.innerHTML = "<p>A 2. elemtől kezdődően minden elemet egy segédváltozóba kitéve összehasonlítunk az előző elemmel (elemekkel). Ha bármelyik előző elem nagyobb, akkor az összehasonlítandó elem felülíródik az előző elemmel, különben önmaga marad és befejeződik a hasonlítás. Ha már nincs mivel összehasonlítani (nincs több előző elem), akkor az 1. elem felülíródik a segédváltozóba tett összehasonlítandó elemmel. A felülírás pedig hatékonyabb, mint a sima csere mert ahány felülírás van, annyi a mozgatások száma is, ezzel szemben a sima cserénél a cserék számának a hatványa egyezik meg a mozgatások számával (kevesebb mozgatás lesz a felülírásos esetben).</p><br> <p><b><i>Statisztikák (10,000 elem esetén, 'n' az elemek száma):</i></b></p> <p>Min. összehasonlítás (eleve rendezett): n-1 = 9.999</p> <p>Max. összehasonlítás (eleve fordított sorrend): n*(n-1)/2 = 49.995.000</p> <p>Min. mozgatás (eleve rendezett): 2*(n-1) = 19.998<p> <p>Max. mozgatás (eleve fordított sorrend): (2*(n-1))+(n*(n-1)/2) = 50.014.998</p> <p>Helyfoglalás: n+1 = 10.001</p> <p>Min. lépésszám (eleve rendezett): (n-1)+(2*(n-1)) = 29.997</p> <p>Max. lépésszám (eleve fordított sorrend): (n*(n-1)/2) + ((2*(n-1))+(n*(n-1)/2)) = 100.009.998</p>"
})
gombok[3].addEventListener('click', () =>{
    ideSzovegMegy.innerHTML = "<p>Itt a tömb elejétől az egymás mellett lévő elemeket sorban összehasonlítjuk (1.-t a 2.-al, 2.-t a 3.-al, stb.). Ha az elem, amivel hasonlítunk kisebb, akkor felcseréljük őket. A hasonlítás végére a legnagyobb elem a sor végére kerül. Majd az összehasonlítások folyamatát megismésteljük (de csak az utolsó előtti elemig). A folyamat végére az utolsó előtti legnagyobb elem az utolsó előtti helyre kerül. Ezt addig ismételjük, amíg a végén már csak a 2. elemig hasonlítunk, azaz előáll a rendezett sorrend</p><br> <p><b><i>Statisztikák (10,000 elem esetén, 'n' az elemek száma):</i></b></p> <p>Összehasonlítások száma: n*(n-1)/2 = 49.995.000</p> <p>Min. mozgatás (eleve rendezett): 0<p> <p>Max. mozgatás (eleve fordított sorrend): 3*(n*(n-1)/2) = 149.985.000</p> <p>Helyfoglalás: n+1 = 10.001</p> <p>Min. lépésszám (eleve rendezett): (n*1(n-1)/2) + (0) = 49.995.000</p> <p>Max. lépésszám (eleve fordított sorrend): (n*(n-1)/2) + (3*(n*(n-1)/2)) = n<sup>2</sup> = 199.980.000</p>"
})
gombok[4].addEventListener('click', () =>{
    ideSzovegMegy.innerHTML = "<p>Ha a tömb kiinduláskor teljesen rendezett, vagy egy része rendezetté válik, akkor ezen módszerrel az összehasonlítások száma csökkenthető (a buborékos rendezés során vannak fölösleges összehasonlítások). A tömb már rendezett részeiben nem végez összehasonlításokat, tehát akkor cserél amikor tényleg van értelme.</p><br> <p><b><i>Statisztikák (10,000 elem esetén, 'n' az elemek száma):</i></b></p> <p>Min. összehasonlítás (eleve rendezett): n-1 = 9.999</p> <p>Max. összehasonlítás (eleve fordított sorrend): n*(n-1)/2 = 49.995.000</p> <p>Min. mozgatás (eleve rendezett): 0<p> <p>Max. mozgatás (eleve fordított sorrend): 3*(n*(n-1)/2) = 149.985.000</p> <p>Helyfoglalás: n+1 = 10.001</p> <p>Min. lépésszám (eleve rendezett): (n-1) + (0) = 9.999</p> <p>Max. lépésszám (eleve fordított sorrend): (n*(n-1)/2) + (3*(n*(n-1)/2)) = 199.980.000</p>"
})
gombok[5].addEventListener('click', () =>{
    ideSzovegMegy.innerHTML = "<p>Először meghatározzuk a tömb legkisebb elemét és felcseréljük az első elemmel. Majd a 2. elemtől kezdve megkeressük a legkisebbet (a legeslegkisebb már az első helyen van) és felcseréljük a 2. elemmel, és ezt a folyamatot végigcsináljuk addig, amíg el jutunk az utolsó, azaz a legnagyobb elemig, ami az utolsó helyen marad.</p><br> <p><b><i>Statisztikák (10,000 elem esetén, 'n' az elemek száma):</i></b></p> <p>Összehasonlítások száma: n*(n-1)/2 = 49.995.000</p> <p>Min. mozgatás (eleve rendezett): 0<p> <p>Max. mozgatás (eleve fordított sorrend): 3*(n-1) = 29.997</p> <p>Helyfoglalás: n+1 = 10.001</p> <p>Min. lépésszám (eleve rendezett): (n*(n-1)/2) + (0) = 49.995.000</p> <p>Max. lépésszám (eleve fordított sorrend): (n*(n-1)/2) + (3*(n-1)) = 50.024.997</p>"
})